import UIKit

// MARK: - üè† –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.

// TODO: - üßë‚Äçüíª
// –ù–∞–ø–∏—à–∏—Ç–µ generic —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç.

func returnFirstValue<T>(array: [T]) -> T? {
    return array.first
}


// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é printArray, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –∏ –ø–µ—á–∞—Ç–∞–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.

func printArray<T>(array: [T]) {
    array.forEach {
        print($0)
    }
}

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é findMax, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É Comparable –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å nil.

func findMax<T: Comparable>(array: [T]) -> T? {
    guard let maxValue = array.max() else {
        return nil
    }
    return maxValue
}

// Extra task*
// –°–æ–∑–¥–∞–π—Ç–µ generic –ø—Ä–æ—Ç–æ–∫–æ–ª CompareProtocol, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä—è–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞. –ú–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å Bool value –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö –æ–±—ä–µ–∫—Ç–æ–≤. –û–±—ä—è–≤–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–ª–∏ –∫–ª–∞—Å—Å, –ø–æ–¥—á–∏–Ω–∏—Ç–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—É, –¥–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é. –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É—è –≤–∞—à –º–µ—Ç–æ–¥.

protocol CompareProtocol {
    associatedtype T
    func compare(_ element1: T, _ element2: T) -> Bool
}

struct Comparator<T: Comparable>: CompareProtocol {
    func compare(_ element1: T, _ element2: T) -> Bool {
        return element1 < element2
    }
}

let wordComparable = Comparator<String>()

let stringArray = ["Car", "Pig", "Dog", "Cat"]

let sortedStringArray = stringArray.sorted(by: wordComparable.compare)

/*
 TODO: - ‚ùì –í–æ–ø—Ä–æ—Å—ã –∫ –∏–∑—É—á–µ–Ω–∏—é:
 - –ó–∞—á–µ–º –Ω—É–∂–Ω—ã –¥–∂–µ–Ω–µ—Ä–∏–∫–∏?
 - –°–∏–Ω—Ç–∞–∫—Å–∏—Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–∂–µ–Ω–µ—Ä–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏?
 - –ö–∞–∫ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤ –¥–∂–µ–Ω–µ—Ä–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –¥–∂–µ–Ω–µ—Ä–∏–∫ —Ç–∏–ø–µ?
 */

