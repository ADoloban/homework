import UIKit

// MARK: - üè† –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.

// TODO: - üßë‚Äçüíª
/* 1.
 –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Student —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º firstName. –î–æ–±–∞–≤—å—Ç–µ property observer –¥–ª—è —Å–≤–æ–π—Å—Ç–≤–∞ firstName, —á—Ç–æ–±—ã –ø–µ—á–∞—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∫–∞–∫ —Å–≤–æ–π—Å—Ç–≤–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ.
 –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–ª–∞—Å—Å —Å–≤–æ–π—Å—Ç–≤–æ isValid, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏. –û–Ω–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ—Ä–æ—á–µ 2 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –¥–ª–∏–Ω–Ω–µ–µ 15 —Å–∏–º–≤–æ–ª–æ–≤.
 */

class Student{
    var firstName: String {
        didSet {
            print("firstName was changed from \"\(oldValue)\" to \"\(firstName)\"")
        }
    }
    var isValid: Bool {
        return  firstName.count >= 2 && firstName.count <= 15
    }
    
    init(firstName: String) {
        self.firstName = firstName
    }
}

/* 2.
 –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Person —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º age, —Ç–∏–ø–∞ Int. –î–æ–±–∞–≤—å—Ç–µ property observer –∫ —Å–≤–æ–π—Å—Ç–≤—É age, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º. –ï—Å–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 0.
 */

class Person{
    var age: Int {
        didSet {
            if age < 0 {
                age = 0
            }
        }
    }
    
    init(age: Int){
        self.age = age
    }
}


/*
 –°–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Rectangle —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ width –∏ height. –î–æ–±–∞–≤—å—Ç–µ computed property —Å –∏–º–µ–Ω–µ–º area, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ (width * height).
 */

struct Rectangle {
    var width: Double
    var height: Double
    var area: Double {
        width * height
    }
    
    init(width: Double, height: Double) {
        self.width = width
        self.height = height
    }
}

/*
 –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å User, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, –≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç.
 –ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ –≤–æ–∑—Ä–∞—Å—Ç —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–æ–¥–∏–ª–æ—Å—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è.
 –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–ª–∞—Å—Å —Å–≤–æ–π—Å—Ç–≤–∞, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –æ–±—ä–µ–∫—Ç–∞ (3 —Å–≤–æ–π—Å—Ç–≤–∞ - –≤–µ—Å, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å). –ü—Ä–∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–∞–∑–Ω–∏—Ü—ã –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤—É –ø–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–∏–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ, —Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –µ—Å–ª–∏ –≤—ã—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ, —Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ).
 –ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ –≤–µ—Å —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–≤—à–∏ –µ–º—É –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–æ–¥–∏–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Ö—É–¥–µ–ª –∏–ª–∏ –ø–æ—Ç–æ—Å—Ç–µ–ª –æ–±—ä–µ–∫—Ç.
 –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∫–ª–∞—Å—Å–∞ User.
 */

class User{
    let name: String
    let surname: String
    var age: Int{
        didSet{
            print("Happy birthday!!!")
        }
    }
    let height: Int
    var weight: Int {
        didSet {
            if weight < minWeight {
                print("Lost weight! The difference in weight is \(minWeight - weight) kilograms!")
                weight = minWeight
            } else if weight > maxWeight {
                print("Gained weight! The difference in weight is \(maxWeight - weight) kilograms!")
                weight = maxWeight
            }
        }
    }
    var minWeight: Int = 50
    var maxWeight: Int = 100
    static var userCount = 0
    
    init(name: String, surname: String, age: Int, height: Int, weight: Int){
        self.name = name
        self.surname = surname
        self.age = age
        self.height = height
        self.weight = weight
        User.userCount += 1
    }
}

/*
 –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
 
 –†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É ‚Ññ2, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä –≤–º–µ—Å—Ç–æ property observer
 */

class secondPerson{
    private var age: Int = 0
    
    var _age: Int {
        get {
            return age
        }
        set {
            if newValue >= 0 {
                age = newValue
            } else {
                age = 0
            }
        }
    }
    
    init(_age: Int){
        self._age = _age
    }
}

/*
 TODO: - ‚ùì –í–æ–ø—Ä–æ—Å—ã –∫ –∏–∑—É—á–µ–Ω–∏—é:
 - –í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É stored –∏ computed properties?
 - –ß—Ç–æ –∑–Ω–∞—á–∏—Ç lazy?
 - –ß—Ç–æ —Ç–∞–∫–æ–µ getter –∏ setter?
 - –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è property observers?
 - –ó–∞—á–µ–º –Ω—É–∂–Ω—ã –∏ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è property wrappers?
 */

